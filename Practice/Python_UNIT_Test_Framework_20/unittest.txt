* unitTest 1.1 (20_1, 20_2)
  --> In automation testing, organizing your code is very important and client expects us to write
  automation scripts according to the manual test cases.
  --> We can get good reporting structure if we can exactly map our automation code with manual test cases.
  --> In Python we can use Unit Test testing Framework to organize our automation code and to extract reports
  --> To use the methods present in UnitTest Framework, we have to extend the Test Case class
  present in the UnitTest Module.

* unitTest 1.2 ==> Python Unit Test Framework (20_3, )
  --> setup (20_3) -> It will execute before every test method started
                (setup > test1, setup > test2, setup > test3 ...)
  --> teardown (20_3) -> It will execute after completion of every test method
                (test1 > teardown, test2 > teardown, test3 > teardown ...)
  --> setUpClass (20_4) -> It will only run once before every method started in a class
                        (setupClass > test1 > test2 > test3 ....)
  --> tearDownClass (20_4) -> It will only run once after execution of all test methods are done
                        (setUpClass > test1 > test2 > test3 > tearDownClass)
  --> setUpModule
  --> tearDownModule